import { INodeProperties } from 'n8n-workflow';

export const getAllDescription: INodeProperties[] = [
	{
		displayName: 'Filters',
		name: 'filters',
		type: 'collection',
		placeholder: 'Add Filter',
		default: {},
		displayOptions: {
			show: {
				resource: ['ticketStatuses'],
				operation: ['getAll'],
			},
		},
		options: [
			{
				displayName: 'Domain',
				name: 'domain',
				type: 'string',
				default: '',
				description: 'Filter by domain',
			},
			{
				displayName: 'Exclude Closed',
				name: 'excludeclosed',
				type: 'boolean',
				default: false,
				description: 'Whether to exclude closed statuses',
			},
			{
				displayName: 'Exclude Pending',
				name: 'excludepending',
				type: 'boolean',
				default: false,
				description: 'Whether to exclude pending statuses',
			},
			{
				displayName: 'Outcome ID',
				name: 'outcome_id',
				type: 'number',
				default: 0,
				description: 'Filter by outcome ID',
			},
			{
				displayName: 'Show All',
				name: 'showall',
				type: 'boolean',
				default: false,
				description: 'Whether to show all statuses',
			},
			{
				displayName: 'Show Counts',
				name: 'showcounts',
				type: 'boolean',
				default: false,
				description: 'Whether to include ticket counts',
			},
			{
				displayName: 'Show Quick Change Options',
				name: 'showquickchangeoptions',
				type: 'boolean',
				default: false,
				description: 'Whether to show quick change options',
			},
			{
				displayName: 'Split Closed',
				name: 'split_closed',
				type: 'boolean',
				default: false,
				description: 'Whether to split closed statuses',
			},
			{
				displayName: 'Ticket Area ID',
				name: 'ticketarea_id',
				type: 'number',
				default: 0,
				description: 'Filter by ticket area ID',
			},
			{
				displayName: 'Ticket ID',
				name: 'ticket_id',
				type: 'number',
				default: 0,
				description: 'Filter by specific ticket ID',
			},
			{
				displayName: 'Ticket ID First Child',
				name: 'ticket_id_firstchild',
				type: 'number',
				default: 0,
				description: 'Filter by first child ticket ID',
			},
			{
				displayName: 'Ticket Type Group ID',
				name: 'tickettype_group_id',
				type: 'number',
				default: 0,
				description: 'Filter by ticket type group ID',
			},
			{
				displayName: 'Ticket Type ID',
				name: 'tickettype_id',
				type: 'number',
				default: 0,
				description: 'Filter by ticket type ID',
			},
			{
				displayName: 'Ticket Type IDs',
				name: 'tickettype_ids',
				type: 'string',
				default: '',
				description: 'Filter by multiple ticket type IDs (comma-separated)',
			},
			{
				displayName: 'Type',
				name: 'type',
				type: 'string',
				default: '',
				description: 'Filter by status type',
			},
			{
				displayName: 'View ID',
				name: 'view_id',
				type: 'number',
				default: 0,
				description: 'Filter by view ID',
			},
		],
	},
];