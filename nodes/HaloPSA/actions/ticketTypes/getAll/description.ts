import { INodeProperties } from 'n8n-workflow';

export const getALLDescription: INodeProperties[] = [
	{
		displayName: 'Return All',
		name: 'returnAll',
		type: 'boolean',
		displayOptions: {
			show: {
				resource: ['ticketTypes'],
				operation: ['getAll'],
			},
		},
		default: false,
		description: 'Whether to return all results or only up to a given limit',
	},
	{
		displayName: 'Limit',
		name: 'limit',
		type: 'number',
		displayOptions: {
			show: {
				resource: ['ticketTypes'],
				operation: ['getAll'],
				returnAll: [false],
			},
		},
		typeOptions: {
			minValue: 1,
		},
		default: 50,
		description: 'Max number of results to return',
	},
	{
		displayName: 'Filters',
		name: 'filters',
		type: 'collection',
		placeholder: 'Add Filter',
		default: {},
		displayOptions: {
			show: {
				resource: ['ticketTypes'],
				operation: ['getAll'],
			},
		},
	options: [
		{
			displayName: 'Access Control Level',
			name: 'access_control_level',
			type: 'number',
			default: 0,
			description: 'Filters response based on the access control level',
		},
		{
			displayName: 'Anonymous and User',
			name: 'anonanduser',
			type: 'boolean',
			default: false,
			description: 'Whether to filter on ticket types that can be viewed by anonymous users',
		},
		{
			displayName: 'Can Agents Select',
			name: 'canagentsselect',
			type: 'boolean',
			default: false,
			description: 'Whether to filter on ticket types that agents can select',
		},
		{
			displayName: 'Can Create Only',
			name: 'can_create_only',
			type: 'boolean',
			default: false,
			description: 'Whether to filter by the ticket types that are created',
		},
		{
			displayName: 'Can Edit Only',
			name: 'can_edit_only',
			type: 'boolean',
			default: false,
			description: 'Whether to filter by the ticket types that can be edited',
		},
		{
			displayName: 'Can User Create',
			name: 'canusercreate',
			type: 'boolean',
			default: false,
			description: 'Whether to filter on ticket types that users can create',
		},
		{
			displayName: 'Client ID',
			name: 'client_id',
			type: 'number',
			default: 0,
			description: 'Filter Request Types by a particular customer',
		},
		{
			displayName: 'Domain',
			name: 'domain',
			type: 'string',
			default: '',
			description: 'For use with counts: reqs - tickets, opps - opportunities, prjs - projects',
		},
		{
			displayName: 'Group ID',
			name: 'group_id',
			type: 'number',
			default: 0,
			description: 'Filters by the ticket type group',
		},
		{
			displayName: 'Include Current',
			name: 'include_current',
			type: 'number',
			default: 0,
			description: 'Includes this ticket type in the response - used alongside can create and can edit',
		},
		{
			displayName: 'Include Mandatory Field Check',
			name: 'include_mandatory_field_check',
			type: 'boolean',
			default: false,
			description: 'Whether to include mandatory field check information',
		},
		{
			displayName: 'Is Quick Time Dropdown',
			name: 'isquicktimedropdown',
			type: 'boolean',
			default: false,
			description: 'Whether to filter by the ticket types that display on quick time',
		},
		{
			displayName: 'ITIL Type',
			name: 'itil_type',
			type: 'number',
			default: 0,
			description: 'Filter by itil type',
		},
		{
			displayName: 'Outcome ID',
			name: 'outcome_id',
			type: 'number',
			default: 0,
			description: 'Filter by outcome ID',
		},
		{
			displayName: 'Search Tickets',
			name: 'searchtickets',
			type: 'string',
			default: '',
			description: 'Filter on ticket types based on tickets',
		},
		{
			displayName: 'Show All',
			name: 'showall',
			type: 'boolean',
			default: false,
			description: 'Whether admin override to show all ticket types, overriding tickets permissions',
		},
		{
			displayName: 'Show Counts',
			name: 'showcounts',
			type: 'boolean',
			default: false,
			description: 'Whether to show the count of tickets in the response',
		},
		{
			displayName: 'Show Inactive',
			name: 'showinactive',
			type: 'boolean',
			default: false,
			description: 'Whether to include inactive ticket types in the response',
		},
		{
			displayName: 'Sprints Only',
			name: 'sprints_only',
			type: 'boolean',
			default: false,
			description: 'Whether to filter to show only sprint ticket types',
		},
		{
			displayName: 'Ticket Area ID',
			name: 'ticketarea_id',
			type: 'number',
			default: 0,
			description: 'Only for showcounts - ticket area filter',
		},
		{
			displayName: 'User Only',
			name: 'user_only',
			type: 'boolean',
			default: false,
			description: 'Whether to filter by the ticket types that user can see',
		},
		{
			displayName: 'View ID',
			name: 'view_id',
			type: 'number',
			default: 0,
			description: 'Only for showcounts - ticket view filter',
		},
	],
	},
];